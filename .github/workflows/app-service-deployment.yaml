name: App Service Deployment
on:
  workflow_dispatch:
    inputs:
      subscription_name:
        description: Subscription Name to be created
        type: choice
        required: true
        options:
          - dev
          - staging
          - prod

env:
  WEBAPP_NAME: "appavddevuan1"
  WORKING_DIRECTORY: 'flask'        # set this to the path to your path of working directory inside github repository, defaults to the repository root
  PYTHON_VERSION: '3.10'        # set the version to use
  STARTUP_COMMAND: ''           # set this to the startup command required to start the gunicorn server. default it is empty

permissions:
  id-token: write
  contents: read

jobs:
  build-app:
    runs-on: ubuntu-latest
#    environment:
    steps:
      # checkout the repo
      - uses: actions/checkout@v4
      # setup python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      # install dependencies
      - name: python install
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          sudo apt install python${{ env.PYTHON_VERSION }}-venv
          python -m venv --copies antenv
          source antenv/bin/activate
          pip install setuptools
          pip install -r requirements.txt
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: flask-app
          path: '${{ github.workspace }}/flask'

  Deploy-app:
    runs-on: ubuntu-latest
    needs:
      - build-app
    steps:
      # Azure login
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS }}
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: flask-app
          path: flask
      - name: Run ls
        run: |
          echo "Files"
          ls
          pwd 
#      - uses: azure/appservice-settings@v1
#        with:
#          app-name: ${{ env.WEBAPP_NAME }}
#          mask-inputs: false
#          general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}' #'General configuration settings as Key Value pairs'
      # deploy web app
      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          package: ${{ env.WORKING_DIRECTORY }}
          startup-command: ${{ env.STARTUP_COMMAND }}
      # Azure logout
      - name: logout
        run: |
          az logout
